package playlist

import (
	"fmt"
	"dankmuzikk/entities"
	"dankmuzikk/views/icons"
	"dankmuzikk/views/components/menus"
	"dankmuzikk/views/components/ui"
)

templ PlaylistsPopup(index int, songId string) {
	@menus.Popup(fmt.Sprint(index), "Add to playlist", popupButton(songId), playlistSelector(songId))
}

templ playlistSelector(songId string) {
	<div
		id={ "playlists-" + songId }
		class={
			"min-w-[350px]", "bg-accent-trans-30", "backdrop-blur-xl", "p-3", "text-secondary",
			"rounded-b-[10px]", "rounded-l-[10px]",
		}
	>
		<div id="playlist-loading" class={ "w-full", "flex", "justify-center" }>
			<div class={ "loader", "!h-20", "!w-20" }></div>
		</div>
		<span class={ "text-secondary", "text-xl" }>Loading playlists...</span>
	</div>
}

templ PlaylistsSelector(songId string, playlists []entities.Playlist, songsInPlaylists map[string]bool) {
	<div
		class={
			"min-w-[350px]", "bg-accent-trans-30", "backdrop-blur-xl", "p-3", "text-secondary",
			"rounded-b-[10px]", "rounded-l-[10px]",
		}
	>
		<h2 class={ "text-xl", "font-bold" }>Save this song to...</h2>
		<div class={ "my-2" }></div>
		<ul class={ "flex", "flex-col", "gap-y-2" }>
			if playlists == nil || len(playlists) == 0 {
				<p>
					No playlists were found
				</p>
			} else {
				for _, playlist := range playlists {
					<li
						class={ "flex", "gap-x-4", "items-center", "cursor-pointer" }
						hx-put={
							fmt.Sprintf(
								"/api/song/playlist?song-id=%s&playlist-id=%s",
								songId,
								playlist.PublicId,
							),
						}
						hx-swap="innerHTML"
						hx-target={ fmt.Sprintf("#song-in-playlist-%s-%s", playlist.PublicId, songId) }
						hx-trigger="click"
						data-loading-target="#loading"
						data-loading-class-remove="hidden"
						data-loading-path={
							fmt.Sprintf(
								"/api/song/playlist?song-id=%s&playlist-id=%s",
								songId,
								playlist.PublicId,
							),
						}
					>
						<div
							id={ fmt.Sprintf("song-in-playlist-%s-%s", playlist.PublicId, songId) }
						>
							if songsInPlaylists[songId+"-"+playlist.PublicId] {
								@ui.CheckedCheckbox()
							} else {
								@ui.UncheckedCheckbox()
							}
						</div>
						<p class={ "max-w-[300px]", "overflow-hidden", "text-nowrap", "text-ellipsis", "text-secondary" }>
							{ playlist.Title }
						</p>
					</li>
				}
			}
		</ul>
	</div>
}

templ popupButton(songId string) {
	<div
		class={ "flex", "gap-x-2", "items-center", "p-2", "w-full" }
		hx-get={ "/api/playlist/all?song-id=" + songId }
		hx-swap="outerHTML"
		hx-trigger="click"
		hx-target={ "#playlists-" + songId }
	>
		@icons.AddToPlaytlist()
		<span>Save to a playlist</span>
	</div>
}
