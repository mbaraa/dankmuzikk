package pages

import (
	"dankmuzikk/views/components/playlist"
	"dankmuzikk/entities"
	"dankmuzikk/views/components/song"
	"dankmuzikk/views/components/page"
)

templ SearchResults(results []entities.Song, playlists []entities.Playlist, songsInPlaylists map[string]bool) {
	if len(results) == 0 {
		@page.Container(noResultsHeader(), empty())
	} else {
		@page.Container(searchHeader(), searchContent(results, playlists, songsInPlaylists))
	}
}

templ noResultsHeader() {
	<p class={ "w-full", "text-center", "text-secondary", "text-xl" }>No results were found...</p>
}

templ empty() {
}

templ searchHeader() {
	<h1 class={ "text-secondary", "text-3xl", "lg:text-4xl", "mb-4" }>Search results</h1>
}

templ searchContent(results []entities.Song, playlists []entities.Playlist, songsInPlaylists map[string]bool) {
	for idx, res := range results {
		@song.Song(res, nil, []templ.Component{playlist.PlaylistsPopup(idx, res.YtId, playlists, songsInPlaylists)}, playSong(res), true)
	}
}

script playSong(song entities.Song) {
    window.Player.playSingleSong(song);
}
